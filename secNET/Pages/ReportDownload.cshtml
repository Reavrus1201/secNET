@model secNET.Models.ReportViewModel

@{
    ViewData["Title"] = Model.ReportTitle;
}

<!DOCTYPE html>
<html>
<head>
    <title>@Model.ReportTitle</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            background-color: #fff; /* Set to white for print */
            padding: 5mm; /* Reduced for print */
            margin: 0;
            color: #000; /* Ensure text is black */
        }

        .report-container {
            margin: 0; /* Adjusted for print */
            padding: 5mm; /* Adjusted for print */
            background-color: #fff;
            border-radius: 0; /* Remove radius for print */
            box-shadow: none; /* Remove shadow for print */
        }

        h1 {
            font-size: 20px;
            font-weight: 600;
            color: #000; /* Ensure black for print */
            border-bottom: 2px solid #00A651;
            padding-bottom: 3px;
            margin: 5px 0;
        }

        h2 {
            font-size: 16px;
            color: #000; /* Ensure black for print */
            margin: 10px 0 5px;
            border-left: 4px solid #00A651;
            padding-left: 8px;
        }

        p {
            margin: 4px 0;
            font-size: 14px;
            color: #000; /* Ensure black for print */
            line-height: 1.3;
        }

        .footnote {
            margin-top: 10px;
            font-size: 8pt; /* Adjusted for print */
            color: #000; /* Ensure black for print */
            text-align: center;
        }

        .checklist-section {
            margin-top: 10px;
            padding: 8px;
            background-color: #f9f9f9; /* Keep light gray for screen, but will print white */
            border: 1px solid #e0e0e0;
            border-radius: 5px;
            column-count: 2;
            column-gap: 15mm; /* Adjusted for print */
        }

        .checklist-item {
            margin-bottom: 8px;
            padding: 5px;
            border-bottom: 1px solid #ecf0f1;
            break-inside: avoid;
        }

            .checklist-item:last-child {
                border-bottom: none;
            }

        .answer-yes {
            color: #00A651;
            font-weight: bold;
        }

        .answer-no {
            color: #d83b01;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="report-container">
        <h1>@Model.ReportTitle</h1>
        <p>Date: @Model.Date</p>

        @if (Model.Details is secNET.Models.ReportViewModel.LogDetails logDetails)
        {
            <h2>CCTV Log Details</h2>
            <p>ID: @logDetails.Id (Submitted by: @logDetails.SubmittedBy)</p>
            <p>Branch: @logDetails.Branch</p>
            <p>Date: @logDetails.Date</p>
            <p>Operator Name: @logDetails.OperatorName</p>
            <p>Shift Type: @logDetails.ShiftType</p>
            <p>Status: @logDetails.Status</p>
            <p>Compliance Percentage: @logDetails.CompliancePercentage</p>
            <p>Comments: @logDetails.Comments</p>
            <p>Branch Manager Notes: @logDetails.BranchManagerNotes</p>
            <p>Report Seen By: @logDetails.ReportSeenBy</p>
            <p>Branch Manager: @logDetails.BranchManager</p>
            <p>Date of Report Seen: @logDetails.DateOfReportSeen</p>
            <p>Reviewed By: @logDetails.ReviewedBy</p>

            if (Model.ChecklistData != null)
            {
                <div class="checklist-section">
                    <h2>Checklist Details</h2>
                    @foreach (var category in Model.ChecklistData)
                    {
                        foreach (var question in category.Value.Questions)
                        {
                            <div class="checklist-item">
                                <p><strong>@question.Key</strong></p>
                                <p>Answer: <span class="@(question.Value == "Yes" ? "answer-yes" : "answer-no")">@question.Value</span></p>
                                @if (category.Value.CROComments.ContainsKey(question.Key) && !string.IsNullOrEmpty(category.Value.CROComments[question.Key]))
                                {
                                    <p>CRO Comment: @category.Value.CROComments[question.Key]</p>
                                }
                                @if (category.Value.ManagersActionTaken.ContainsKey(question.Key) && !string.IsNullOrEmpty(category.Value.ManagersActionTaken[question.Key]))
                                {
                                    <p>Manager's Action Taken: @category.Value.ManagersActionTaken[question.Key]</p>
                                }
                            </div>
                        }
                    }
                </div>
            }
        }
        else if (Model.Details is secNET.Models.ReportViewModel.IncidentDetails incidentDetails)
        {
            <h2>Incident Details</h2>
            <p>ID: @incidentDetails.Id (Created by: @incidentDetails.CreatedBy)</p>
            <p>Branch: @incidentDetails.Branch</p>
            <p>Incident DateTime: @incidentDetails.IncidentDateTime</p>
            <p>Type: @incidentDetails.Type</p>
            <p>Fields Data: @incidentDetails.FieldsData</p>
        }

        <p class="footnote">@Model.Footnote</p>
    </div>
</body>
</html>